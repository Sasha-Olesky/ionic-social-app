// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
// 'starter.services' is found in services.js
// 'starter.controllers' is found in controllers.js
angular.module('starter', ['ionic','ngCordova', 'ionic-toast', 'starter.home', 'starter.dynamics','starter.account','starter.personal', 'starter.services','starter.login','starter.session','starter.search','starter.pletter','starter.alert','starter.public'])

.run(function($ionicPlatform, $state, Session) {
	$ionicPlatform.ready(function() {
		// Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
		// for form inputs)		
		if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {
			cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
			cordova.plugins.Keyboard.disableScroll(true);
		}
		var push = PushNotification.init({
			android: {
				senderID: "165346705120"
			},
			browser: {
				pushServiceURL: 'http://push.api.phonegap.com/v1/push'
			},
			ios: {
				alert: "true",
				badge: true,
				sound: 'false'
			},
			windows: {}
		});
		PushNotification.hasPermission(function(data) {
			if (data.isEnabled) {
				console.log('isEnabled');
			}
		});
		push.on('registration', function(data) {
			console.log(data.registrationId);
		});
		push.on('notification', function(data) {
			console.log(data.message);
			console.log(data.title);
			console.log(data.sound);
			console.log(data.image);
			console.log(data.additionalData);
		});
		if (window.StatusBar) {
			// org.apache.cordova.statusbar required
			StatusBar.styleDefault();
		}
		
		if (Session.isLoggedIn()) {
			$state.go('tab.home');
		} else {
			$state.go('login');
		}
		
	});
})

.config(function($ionicConfigProvider) {
    $ionicConfigProvider.tabs.position('bottom'); 	
})

.config(function($stateProvider, $urlRouterProvider) {
	
	$stateProvider
	
	.state('splash', {
		url: '/splash',    
		templateUrl: 'templates/home/splash.html'
	})

	/*======== main tab url ========*/
	.state('tab', {
		url: '/tab',    
		templateUrl: 'templates/tabs.html'
	})
	.state('tab.home', {
		cache:false,
		url: '/home',
		views: {
			'tab-home': {
				templateUrl: 'templates/home/index.html',
				controller: 'homeCtrl'
			}
		}
	})
	
	/*======== dynamics tab ========*/
	.state('tab.dynamics', {
		cache:false,
		url: '/dynamics',
		views: {
			'tab-dynamic': {
				templateUrl: 'templates/dynamics/index.html',
				controller: 'dynamicsCtrl'
			}
		}
	})
	.state('tab.dynamics.square', {
		url: '/square',
		views: {
			'tab-dynamic-square': {
				templateUrl: 'templates/dynamics/square.html',
				controller: 'dynamicsCtrl'
			}
		}
	})
	.state('tab.dynamics.friend', {
		url: '/friend',
		views: {
			'tab-dynamic-friend': {
				templateUrl: 'templates/dynamics/friend.html',
				controller: 'dynamicsCtrl'
			}
		}
	})
	
	/*========= public tab ========*/
	.state('tab.public', {
		url: '/public',
		views: {
			'tab-public': {
				templateUrl: 'templates/public/index.html',
				controller: 'publicCtrl'
			}
		}
	})
	
	/*========= public tab ========*/
	.state('tab.letter', {
		cache:false,
		url: '/letter',
		views: {
			'tab-letter': {
				templateUrl: 'templates/letter/index.html',
				controller: 'PletterCtrl'
			}
		}
	})
	.state('tab.letter.receive', {
		url: '/receive',
		views: {
			'tab-letter-receive': {
				templateUrl: 'templates/letter/receive.html',
				controller: 'PletterCtrl'
			}
		}
	})
	.state('tab.letter.send', {
		url: '/send',
		views: {
			'tab-letter-send': {
				templateUrl: 'templates/letter/send.html',
				controller: 'PletterCtrl'
			}
		}
	})
	
	/*========= account tab ==========*/
	.state('tab.account', {
		cache : false,
		url: '/account',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/index.html',
				controller: 'accountCtrl'
			}
		}
	})
	
	.state('chatwith', {
		url: '/chatwith/:userid',
		templateUrl     : "templates/letter/chatwith.html",
		controller      : 'chatCtrl'
	})
	
	//login
	.state('login', {
		cache : false,
		url: "/login",
		templateUrl     : "templates/login/index.html",
		controller      : 'loginCtrl'
	})
	
	//Register
	.state('register', {
		cache : false,
		url: "/regphone",
		templateUrl     : "templates/login/register.html",
		controller      : 'loginCtrl'
	})
	.state('reg_password', {
		cache : false,
		url: "/reg_password",
		templateUrl     : "templates/login/reg_password.html",
		controller      : 'loginCtrl'
	})
	.state('reg_gender', {
		cache : false,
		url: "/reg_gender",
		templateUrl     : "templates/login/reg_gender.html",
		controller      : 'loginCtrl'
	})
	.state('reg_job', {
		cache : false,
		url: "/reg_job",
		templateUrl     : "templates/login/reg_job.html",
		controller      : 'loginCtrl'
	})
	.state('reg_birthday', {
		cache : false,
		url: "/reg_birthday",
		templateUrl     : "templates/login/reg_birthday.html",
		controller      : 'loginCtrl'
	})
	.state('reg_education', {
		cache : false,
		url: "/reg_education",
		templateUrl     : "templates/login/reg_education.html",
		controller      : 'loginCtrl'
	})
	.state('reg_wage', {
		cache : false,
		url: "/reg_wage",
		templateUrl     : "templates/login/reg_wage.html",
		controller      : 'loginCtrl'
	})
	.state('reg_hobby', {
		cache : false,
		url: "/reg_hobby",
		templateUrl     : "templates/login/reg_hobby.html",
		controller      : 'loginCtrl'
	})
	.state('reg_character', {
		cache : false,
		url: "/reg_character",
		templateUrl     : "templates/login/reg_character.html",
		controller      : 'loginCtrl'
	})
	.state('reg_stature', {
		cache : false,
		url: "/reg_stature",
		templateUrl     : "templates/login/reg_stature.html",
		controller      : 'loginCtrl'
	})
	
	//Alert
	.state('alert', {
		url: "/alert",
		templateUrl     : "templates/alert/index.html",
		controller      : 'AlertCtrl'
	})
	.state('alert.notify', {
		url: '/notify',
		views: {
			'tab-alert-notify': {
				templateUrl: 'templates/alert/notify.html',
				controller: 'AlertCtrl'
			}
		}
	})
	
	//letter
	.state('alert.letter', {
		url: '/letter',
		views: {
			'tab-alert-letter': {
				templateUrl: 'templates/alert/letter.html',
				controller: 'AlertCtrl'
			}
		}
	})
	.state('alert.ignore', {
		url: '/ignore',
		views: {
			'tab-alert-ignore': {
				templateUrl: 'templates/alert/ignore.html',
				controller: 'AlertCtrl'
			}
		}
	})

	//Search
	.state('search', {
		url: "/search",
		templateUrl     : "templates/search/index.html",
		controller      : 'SearchCtrl'
	})
  
	//personal_information
	.state('personal_information', {
		cache: false,
		url: '/personal_information',
		templateUrl: 'templates/account/personal_information.html',
		controller: 'accountCtrl'
	})
	.state('personal_information.inner_monologue', {	  
		url: '/inner_monologue',
		views: {
			'tab-inner-monologue': {
				templateUrl: 'templates/account/personal_information/inner_monologue.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('personal_information.contact_information', {	  
		url: '/contact_information',
		views: {
			'tab-contact-information': {
				templateUrl: 'templates/account/personal_information/contact_information.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('personal_information.detail_information', {	  
		url: '/detail_information',
		views: {
			'tab-detail-information': {
				templateUrl: 'templates/account/personal_information/detail_information.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('personal_information.partner_condition', {	  
		url: '/partner_condition',
		views: {
			'tab-partner-condition': {
				templateUrl: 'templates/account/personal_information/partner_condition.html',
				controller: 'accountCtrl'
			}
		}
	})
	
	//agree
	.state('tab.agree', {
		url: '/agree',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/agree.html',
				controller: 'accountCtrl'
			}
		}
	})
	
	//follow
	.state('tab.my_follows', {
		cache:false,
		url: '/my_follows',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/my_follows.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.my_follows.follow', {
		url: '/follow',
		views: {
			'tab-account-follow': {
				templateUrl: 'templates/account/my_follows/follow.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.my_follows.follow_me', {
		url: '/follow_me',
		views: {
			'tab-account-follow-me': {
				templateUrl: 'templates/account/my_follows/follow_me.html',
				controller: 'accountCtrl'
			}
		}
	})
	
	//dynamics
	.state('account_dynamics', {
		cache : false,
		url: '/account_dynamics',
		templateUrl: 'templates/account/dynamics.html',
		controller: 'accountCtrl'
	})
	
	//gift
	.state('tab.my_gifts', {
		cache:false,
		url: '/my_gifts',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/my_gifts.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.my_gifts.received', {
		url: '/received',
		views: {
			'tab-account-received': {
				templateUrl: 'templates/account/my_gifts/received.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.my_gifts.given', {
		url: '/given',
		views: {
			'tab-account-given': {
				templateUrl: 'templates/account/my_gifts/given.html',
				controller: 'accountCtrl'
			}
		}
	})
	
	//call to meet
	.state('tab.call_to_meet', {
		cache:false,
		url: '/call_to_meet',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/call_to_meet.html',
				controller: 'accountCtrl'
			}
		}
	})
	
	//settings
	.state('tab.settings', {
		url: '/settings',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/settings.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.change_password', {
		url: '/change_password',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/settings/change_password.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.certification', {
		url: '/certification',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/settings/certification.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.online_service', {
		url: '/online_service',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/settings/online_service.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.about_us', {
		url: '/about_us',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/settings/about_us.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('tab.privacy_settings', {
		url: '/privacy_settings',
		views: {
			'tab-account': {
				templateUrl: 'templates/account/settings/privacy_settings.html',
				controller: 'accountCtrl'
			}
		}
	})
	
	//update membership
	.state('update_membership', {
		cache:false,
		url: '/update_membership',    
		templateUrl: 'templates/account/update_membership.html',
		controller: 'accountCtrl'
	})
	.state('vip_privilege', {
		cache:false,
		url: '/vip_privilege/:vip_days',
		templateUrl: 'templates/account/update_membership/vip_privilege.html',
		controller: 'accountCtrl'
	})
	.state('payment', {
		cache:false,
		url: '/payment/:vip_days',
		templateUrl: 'templates/account/update_membership/payment.html',
		controller: 'accountCtrl'    
	})
	
	//integral shop
	.state('integral_shop', {
		cache:false,
		url: '/integral_shop',
		templateUrl: 'templates/account/integral_shop.html',
		controller: 'accountCtrl'
	})
	.state('integral_shop.product_male', {
		url: '/product_male',
		views: {
			'tab-product-male': {
				templateUrl: 'templates/account/integral_shop/product.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('integral_shop.product_female', {
		url: '/product_female',
		views: {
			'tab-product-female': {
				templateUrl: 'templates/account/integral_shop/product.html',
				controller: 'accountCtrl'
			}
		}
	})
	.state('product_detail', {
		cache:false,
		url: '/product_detail/:product_id',
		templateUrl: 'templates/account/integral_shop/product_detail.html',
		controller: 'accountCtrl'
	})
	.state('buy_coins', {
		cache:false,
		url: '/buy_coins',
		templateUrl: 'templates/account/buy_coins.html',
		controller: 'accountCtrl'
	})
	.state('coin_payment', {
		cache:false,
		url: '/coin_payment/:coins',
		templateUrl: 'templates/account/buy_coins/payment.html',
		controller: 'accountCtrl'
	})
	
	//personal space
	.state('personal_space', {
		cache:false,
		url: '/personal_space/:id',
		templateUrl: 'templates/personal_space/index.html',
		controller: 'personalCtrl'
	})
	.state('personal_space.profile', {
		url: '/profile',
		views: {
			'tab-profile': {
				templateUrl: 'templates/personal_space/profile.html',
				controller: 'personalCtrl'
			}
		}	
	})
	.state('personal_space.dynamics', {
		url: '/dynamics',
		views: {
			'tab-dynamics': {
				templateUrl: 'templates/personal_space/dynamics.html',
				controller: 'personalCtrl'
			}
		}
	})
	.state('personal_call_to_meet', {
		url: '/personal_call_to_meet/:id',
		templateUrl: 'templates/personal_space/call_to_meet.html',
		controller: 'personalCtrl'
	})
	.state('video_chat', {
		cache:false,
		url: '/video_chat/:id',
		templateUrl: 'templates/personal_space/video_chat.html',
		controller: 'personalCtrl'
	})
	.state('present_shop', {
		cache:false,
		cache:false,
		url: '/present_shop/:id',
		templateUrl: 'templates/personal_space/present_shop.html',
		controller: 'personalCtrl'
	})
	.state('funny_game', {
		cache:false,
		url: '/funny_game/:id',
		templateUrl: 'templates/personal_space/funny_game.html',
		controller: 'personalCtrl'
	})
	.state('play_game', {
		cache:false,
		url: '/play_game/:id',
		templateUrl: 'templates/personal_space/play_game.html',
		controller: 'personalCtrl'
	});

	// if none of the above states are matched, use this as the fallback
	$urlRouterProvider.otherwise('/splash');

})
.controller('indexCtrl', function($scope, $state, $window, Session, APIManager){
	
	$scope.onlineStatus = $window.navigator.onLine;	
	
	$scope.$watch('onlineStatus', function(online) {
        if (Session.isLoggedIn()) {
			var user = Session.getSession('user');
			var online_status = online?1:0;
			var url = 'set_online';
			var data = {userid:user.id, online:online_status};
			APIManager.get(url, data);
		}
    });
	
	$scope.isShow = false;
	$scope.$on('child', function (event, data) {
		$scope.isShow = data;
	});	
	
	/*
	$scope.is_loggedin = function() {
		if (Session.isLoggedIn()) {
			$state.go('tab.account');
		} else {
			$state.go('login', {param:'account'});
		}
	};
	*/
	
	$window.addEventListener("online", function () {
        $scope.onlineStatus = true;
    }, true);

    $window.addEventListener("offline", function () {
        $scope.onlineStatus = false;
    }, true);
	
	$scope.cancel_exit = function() {
		Session.cancelExit();
	};
	
	$scope.app_exit = function() {
		Session.exitApp();
	};	
});

